From 87983b269fba8a454c25902650cb6dc973602117 Mon Sep 17 00:00:00 2001
From: Benjamin Zeller <bzeller@suse.de>
Date: Tue, 15 Aug 2023 11:50:06 +0200
Subject: [PATCH] Fix zypp/Arch.h for clang (fixes #478)

Clang seems to have issues with picking the overload in std::men_fn if
there is a static overload of a member function. We need to explicitely
specify the correct type of the function pointer.
To make sure this would not break compiling a application with clang that
builds against libzypp this patch works around the problem.
---
 zypp/Arch.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/zypp/Arch.h b/zypp/Arch.h
index 3d822b189..20875fa10 100644
--- a/zypp/Arch.h
+++ b/zypp/Arch.h
@@ -134,8 +134,9 @@ namespace zypp
     /** */
     static std::string asString( const CompatSet & cset )
     {
-      return str::join( make_transform_iterator( cset.begin(), std::mem_fn(&Arch::asString) ),
-                        make_transform_iterator( cset.end(), std::mem_fn(&Arch::asString) ) );
+      const std::string & (Arch::*memfn)( ) const = &Arch::asString;
+      return str::join( make_transform_iterator( cset.begin(), std::mem_fn( memfn ) ),
+                        make_transform_iterator( cset.end(), std::mem_fn( memfn ) ) );
     }
 
   public:
